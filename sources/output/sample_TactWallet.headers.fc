;;
;; Header files for TactWallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $SendParameters$_store
builder $SendParameters$_store(builder build_0, (int, slice, int, int, cell, cell, cell) v) inline_ref;

;; $SendParameters$_store_cell
cell $SendParameters$_store_cell((int, slice, int, int, cell, cell, cell) v) inline;

;; $SendParameters$_load
(slice, ((int, slice, int, int, cell, cell, cell))) $SendParameters$_load(slice sc_0) inline_ref;

;; $ExtMessage$_load
(slice, ((slice, int, int, (int, slice, int, int, cell, cell, cell)))) $ExtMessage$_load(slice sc_0) inline;

;; $TactWallet$_store
builder $TactWallet$_store(builder build_0, (int, int, slice) v) inline;

;; $TactWallet$_load
(slice, ((int, int, slice))) $TactWallet$_load(slice sc_0) inline;

;; $TactWallet$init$_load
(slice, ((int, slice))) $TactWallet$init$_load(slice sc_0) inline;

;; $TactWallet$_contract_init
(int, int, slice) $TactWallet$_contract_init(int $publicKey, slice $admin) impure inline_ref;

;; $TactWallet$_contract_load
(int, int, slice) $TactWallet$_contract_load() impure inline_ref;

;; $TactWallet$_contract_store
() $TactWallet$_contract_store((int, int, slice) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $TactWallet$_fun_seqno
((int, int, slice), int) $TactWallet$_fun_seqno((int, int, slice) $self) impure inline_ref;

;; $TactWallet$_fun_get_public_key
((int, int, slice), int) $TactWallet$_fun_get_public_key((int, int, slice) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice to, int value, int mode, int bounce) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;
